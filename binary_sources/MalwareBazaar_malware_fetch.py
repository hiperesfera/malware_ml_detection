#!/usr/bin/env python3

import requests
import json
import os
import pandas as pd

#MalwareBazaar Auth-Key
AUTH_KEY = 'XXXXXXXXXXXXXXXXXXXXX' # This one works !

# Headers for API requests
headers = {'Auth-Key': AUTH_KEY}

# Directory to save downloaded samples
DOWNLOAD_DIR = '/media/jfonteboa/2F8B2AE9723D79C2/PE_files/bad/'
os.makedirs(DOWNLOAD_DIR, exist_ok=True)

# Optional funtion. There is a full CSV export with the hashes
def get_pe_samples(limit):
    """
    Fetches SHA256 hashes of recent PE (Portable Executable) malware samples.
    """
    url = 'https://mb-api.abuse.ch/api/v1/'
    #data = {'query': 'get_file_type', 'file_type': 'dll', 'limit': limit, 'first_seen': '2000-10-01 00:00:00'}
    data = {'query': 'get_file_type', 'file_type': 'exe', 'limit': limit}
    response = requests.post(url, headers=headers, timeout=100, data=data) # I had to increase the timeout 
    if response.status_code == 200:
        result = response.json()
        if result.get('query_status') == 'ok':
            return [sample['sha256_hash'] for sample in result.get('data', [])]
    return []

def download_sample(sha256_hash):
    """
    Downloads a malware sample by its SHA256 hash.
    """
    url = 'https://mb-api.abuse.ch/api/v1/'
    data = {'query': 'get_file', 'sha256_hash': sha256_hash}
    response = requests.post(url, headers=headers, data=data)
    if response.status_code == 200:
        file_path = os.path.join(DOWNLOAD_DIR, f'{sha256_hash}.zip')
        if not os.path.exists(file_path):
            with open(file_path, 'wb') as file:
                file.write(response.content)
            print(f'Downloaded: {file_path}')
        else:
            print(f'Already Downloaded: {file_path}')
    else:
        print(f'Failed to download sample with hash: {sha256_hash}')

def main():
    # Fetch recent PE sample hashes
    limit = 100

    # This is the malware bazaar full cvs with all samples in their database. Select by file type (e.g. exe, dll ... etc) and then get the SHA256
    # https://bazaar.abuse.ch/export/#csv
    df = pd.read_csv("full_csv.csv", low_memory=False)
    exe_rows = df[df['file_type_guess'] == 'exe']
    exe_hashes = exe_rows['sha256_hash']
    exe_hashes = exe_hashes.dropna()

    #pe_hashes = get_pe_samples(limit)
    pe_hashes = exe_hashes.head(1000)

    if not pe_hashes.any():
        print('No PE samples found.')
        return

    # Download each sample
    for sha256_hash in pe_hashes:
        #print(sha256_hash)
        download_sample(sha256_hash)

if __name__ == '__main__':
    main()
